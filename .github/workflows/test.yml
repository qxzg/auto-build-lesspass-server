name: Test

on:
  push:
    branches: [main]
    paths:
      - '.github/workflows/test.yml'
  workflow_dispatch:
    inputs:
      PUSH_CONTAINERS:
        description: 'push containers to aliyun'
        required: true
        default: 'true'
      UPLOAD_DIFF:
        description: 'uplode diff file'
        required: true
        default: 'false'
      UPLOAD_WED_DIRECTORY:
        description: 'uplode web directory'
        required: true
        default: 'false'
      SSH:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'
#  watch:
#    types: started

jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cloen lesspass source code
        run: git clone https://github.com/lesspass/lesspass.git

      - name: Load custom configuration
        env:
          CONTAINER_DOMAIN: ${{ secrets.CONTAINER_DOMAIN }}
          ALI_CONTAINER_URL: ${{ secrets.ALI_CONTAINER_URL }}
          CONTAINER_PATH: ${{ secrets.CONTAINER_PATH }}
          DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
        run: |
          chmod +x build-lesspass-server.sh
          mv build-lesspass-server.sh lesspass/
          cd lesspass/
          ./build-lesspass-server.sh
          git diff >> "$GITHUB_WORKSPACE/diff.diff"
          echo "diff files md5:"
          md5sum "$GITHUB_WORKSPACE/diff.diff"

      - name: login
        env:
          ALI_LOGIN: ${{ secrets.ALI_DOCKER_REGISTRY_LOGIN }}
          ALI_USERNAME: ${{ secrets.ALI_USERNAME }}
          ALI_PASSWORD: ${{ secrets.ALI_PASSWORD }}
          ALI_LOGIN_URL: ${{ secrets.ALI_LOGIN_URL }}
        run: |
          docker images
          docker login --username="${ALI_USERNAME}" --password "${ALI_PASSWORD}" ${ALI_LOGIN_URL}

      - name: Start SSH via tmate
        uses: P3TERX/ssh2actions@main
        with:
          mode: ngrok
        if: github.event.inputs.SSH == 'true'
        env:
          ALI_LOGIN: ${{ secrets.ALI_DOCKER_REGISTRY_LOGIN }}
          ALI_CONTAINER_URL: ${{ secrets.ALI_CONTAINER_URL }}
          # After sign up on the https://ngrok.com
          # You can find this token here: https://dashboard.ngrok.com/auth/your-authtoken
          NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
          
          # ngrok server region [us, eu, au, ap, sa, jp, in] (optional, default: us)
          # You can find this server region here: https://ngrok.com/docs#global-locations
          NGROK_REGION: jp

          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.ALI_TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.ALI_TELEGRAM_CHAT_ID }}
